Param(
  [string]$Temp,
  [String]$CertName,
  [String]$CAServer,
  [String]$InstallDir<% if $install_dir { -%> <%= '$install_dir' %> <% } -%>,
  [String]$Master<% if $puppetserver { -%> <%= '$puppetserver' %> <% } -%>,,
  [String]$Environment,
  [String]$StartupMode,
  [String]$AccountUser,
  [String]$AccountPassword,
  [String]$AccountDomain
)

If !($Master) { $Master = "<%= $puppetserver %>" }
If !($CAServer) { $CAServer = "<%= $caserver %>" }

$puppet = "<%= $puppet_bat %>"
$source = "https://<%= $puppetserver %>:8140/packages/current/windows"
$package = "<%= $msi %>"
$install = "$temp\$source /qn"

function downloadPuppet {
  [System.Net.ServicePointManager]::ServerCertificateValidationCallback={$true}
  $uri = "$source/$package"
  $obj = New-Object System.Net.WebClient
  $link = $obj.DownloadString($uri)
  Write-Host "Downloading Puppet Enterprise on $env:COMPUTERNAME..."
  Invoke-WebRequest $uri -OutFile $temp\$package
}

function installPuppet {
  $install = "$temp\$package"
  $opts = @("/qn")
  If ($CAServer) { $opts += "PUPPET_CA_SERVER=$CAServer "}
  If ($CertName) { $opts += "PUPPET_AGENT_CERTNAME=$CertName "}
  If ($StartupMode) { $opts += "PUPPET_AGENT_STARTUP_MODE=$StartupMode" }
  If ($InstallDir) { $opts += "INSTALLDIR = $InstallDir" }
  If ($Master) { $opts += "PUPPET_MASTER_SERVER = $Master" }
  If ($Environment) { $opts += "PUPPET_AGENT_ENVIRONMENT = $Environment" }
  If ($AccountUser) { $opts += "PUPPET_AGENT_ACCOUNT_USER = $AccountUser" }
  If ($AccountPassword) { $opts += "PUPPET_AGENT_ACCOUNT_PASSWORD = $AccountPassword" }
  If ($AccountDomain) { $opts += "PUPPET_AGENT_ACCOUNT_DOMAIN = $AccountDomain" }
  Write-Host "Installing Puppet Enterprise on $env:COMPUTERNAME..."
  Start-Process $install $opts -Wait
}

function validateInstall {
  If ((Get-WmiObject -Class Win32_Product).Name -match 'Puppet') {
    Write-Host "Puppet Enterprise has been installed on $env:COMPUTERNAME"
  } else {
    Throw {
      "Something went wrong with the installation on $env:COMPUTERNAME.  Check the event log."
    }
  }
}

function configurePuppet {
  Write-Host "Configuring Puppet Enterprise on $env:COMPUTERNAME..."
  If ($CertName) {
    Invoke-Command -ScriptBlock { cmd.exe /c $puppet config set certname $CertName --section main }
  }
  If ($CAServer) { 
    Invoke-Command -ScriptBlock { cmd.exe /c $puppet config set ca_server $CAServer --section main }
  } else {
    Invoke-Command -ScriptBlock { cmd.exe /c $puppet config set ca_server $Master --section main }
  }
  Invoke-Command -ScriptBlock { cmd.exe /c $puppet config set server $Master --section main }
}

downloadPuppet

$params = @{}
If ($CAServer) { $params += @{ CAServer = $CAServer } }
If ($CertName) { $params += @{ CertName = $CertName } }
If ($StartupMode) { $params += @{ StartupMode = $StartupMode } }
If ($InstallDir) { $params += @{ InstallDir = $InstallDir } }
If ($Master) { $params += @{ Master = $Master } }
If ($Environment) { $params += @{ Environment = $Environment } }
If ($AccountUser) { $params += @{ AccountUser = $AccountUser } }
If ($AccountPassword) { $params += @{ AccountPassword = $AccountPassword } }
If ($AccountDomain) { $params += @{ AccountDomain = $AccountDomain } }
Write-Host "Installing Puppet Enterprise on $env:COMPUTERNAME..."

installPuppet @params

validateInstall

configurePuppet

Write-Host "Installation has completed..."
